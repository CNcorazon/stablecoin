version: '3.8'

services:
  backend:
    build:
      context: ./deploy-contracts
      dockerfile: Dockerfile
    container_name: xd-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - ./deploy-contracts/.env
    volumes:
      - ./deploy-contracts/logs:/app/logs
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))" ]
      interval: 30s
      timeout: 10s
      retries: 3

  caddy-frontend:
    build:
      context: .
      dockerfile: Dockerfile.caddy
    container_name: xd-caddy-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # 健康检查端口
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy # 日志持久化
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "caddy", "version" ]
      interval: 30s
      timeout: 10s
      retries: 3
    # 资源限制（生产环境建议）
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

networks:
  app-network:
    driver: bridge

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  caddy_logs:
    # 新增日志卷
    driver: local
